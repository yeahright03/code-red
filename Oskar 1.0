extends CharacterBody2D


@export var walk_speed = 150.0
@export var run_speed = 300.0
@export_range(0, 1) var deceleration = 0.1
@export_range(0, 1) var acceleration = 0.1

@export var jump_force = -400.0
@export_range(0, 1) var decelerate_on_jump_release = 0.5
var double_jump = 1
@onready var animated_sprite: AnimatedSprite2D = $AnimatedSprite2D

var gravity = ProjectSettings.get_setting("physics/2d/default_gravity")

func _physics_process(delta: float) -> void:
	# Add the gravity.
	if not is_on_floor():
		velocity += get_gravity() * delta

	# Handle jump.
	if Input.is_action_just_pressed("jump") and (is_on_floor() or is_on_wall()):
		velocity.y = jump_force

# Double jump
	if Input.is_action_just_pressed("jump") and not is_on_floor(): #if u press jump and airborne
		if double_jump > 0: #if ur doublejump value is more than 0
			velocity.y = jump_force #"how high to jump" = referense to how high
			double_jump -= 1 #how many times u can double jump

	# Reset double jump when on the floor
	if is_on_floor():
			double_jump = 1

	if Input.is_action_just_released("jump") and velocity.y < 0:
		velocity.y *= decelerate_on_jump_release

	var speed
	if Input.is_action_pressed("run"):
		speed = run_speed
	else:
		speed = walk_speed
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction := Input.get_axis("move_left", "move_right")
	if direction:
		velocity.x = move_toward(velocity.x, direction * speed, speed * acceleration)
	else:
		velocity.x = move_toward(velocity.x, 0, walk_speed * deceleration)

# Flip the Sprite
	if direction > 0:
		animated_sprite.flip_h = false #when direction is less than 0 (left)
	elif direction < 0:
		animated_sprite.flip_h = true #when direction is more than 0 (right)

# Animations
	if is_on_floor():
		if direction == 0:
			animated_sprite.play("idle")
		else:
			animated_sprite.play("run")

# Check if jumping (first jump)
	elif velocity.y < 0:  
		if double_jump == 1:  # If the player still has the double jump, it's the first jump
			if animated_sprite.animation != "jump":
				animated_sprite.play("jump")
	elif double_jump == 0:  # If double jump was used, play the double jump animation
		if animated_sprite.animation != "jump":
			animated_sprite.play("jump")

# Check if falling
	elif velocity.y > 0:  
		if animated_sprite.animation != "fall":
			animated_sprite.play("fall")
	move_and_slide()
